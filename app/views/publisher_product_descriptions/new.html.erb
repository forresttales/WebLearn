<% provide(:title, 'Publishers Add Product') %>


	<script src="/assets/jquery.validate.js"></script>
	<script type="text/javascript" src="/assets/entrepeneurs_jquery-1.js"></script>

	<header>
		<%= render 'share/backtotop' %>
	</header>

	<div class="container">
		<div class="table-profile">
			<div class="row-profile">
				
				<div class="col-left">
					<%= render 'share/dir_publishers_left'%>
				</div>
				
				<div class="col-midd">

					<div style="text-align: left;">
						<span class="normal pad-left-20">Publisher Products</span>
					</div>

					<div class="line-space-20"></div>

					<div class="table-form" style="width: 600px;">
						<div class="row">
							<div class="cell-100percent" tabindex="1">
								
								 <!-- 
								 :description
								 :price 
								 -->
								 								
						    	<%= form_for @publisher_product_description, :html => {:id => 'form_publisher_product_description_new' } do |f| %>	
								<!-- = render 'shared/error_messages', object: f.object -->			
		
								<div class="input-form-spacer"></div>
		
								<div class="row">
									<div class="cell-left-form">
										<%= f.label(:description, 'Description', class: 'input-label-form') %>							
									</div>
									<div class="cell-right-form">
										<%= f.text_field :description, :class => 'input-form', :tabindex => '1', :autofocus => true %>	
									</div>
									<div class="cell-error" id="state_description"><p id="error_description"></p></div>      					   							 								      	
								</div>

								<div class="input-form-spacer"></div>
		
								<div class="row">
									<div class="cell-left-form">
										<%= f.label(:price, 'Price', class: 'input-label-form') %>							
									</div>
									<div class="cell-right-form">
										<%= f.text_field :price, :class => 'input-form-short', :tabindex => '2', :autofocus => false %>	
									</div>
									<div class="cell-error" id="state_price"><p id="error_price"></p></div>      					   							 								      	
								</div>

								<div class="input-form-spacer"></div>
		
								<div class="row">
									<div class="cell-left-form">
										<%= f.label(:type_content_index, "Type of Content<br>or Curriculum".html_safe, class: 'input-label-form') %>							
									</div>
									<div class="cell-right-form">
										
								   		<%= f.select(:type_content_index,
								   				[['-Select-', '0'],								   		
								   				['App', '1'],
								   				['Lesson Plan Document','2'],
								   				['Digital Curriculum','3'],
								   				['eBook','4'],
								   				['Game','5'],
								   				['Software - School Management','6'],
								   				['Software - Other','7'],
								   				['Online Course','8'],
								   				['Tools','9'],
								   				['Video','10']],
								   				{}, 
								   				{ :class => 'form-select', :id => 'select_type_content', :tabindex => '3' } ) %>

									</div>
									<div class="cell-error" id="state_type_content_index"><p id="error_type_content_index"></p></div>      					   							 								      	
								</div>

								<div class="input-form-spacer"></div>

								<div class="row">
									<div class="cell-left-form">
										<%= f.label(:subject_category_index, 'Subject Category', class: 'input-label-form') %>							
									</div>
									<div class="cell-right-form">
										
								   		<%= f.select( :subject_category_index, 
								   				[['-Select-', '0'],								   		
								   				['Language Arts', '1'],
								   				['Science','2'],
								   				['Music & Drama','3'],
								   				['Physical Educations','4'],
								   				['Arts','5'],
								   				['Professional Development','6'],
								   				['Extra-Curricular','7']],
								   				{}, 
								   				{ :class => 'form-select', :tabindex => '4' } ) %>
										
									</div>
									<div class="cell-error" id="state_subject_category_index"><p id="error_subject_category_index"></p></div>      					   							 								      	
								</div>

								<div class="input-form-spacer"></div>
		
								<div class="row">
									<div class="cell-left-form">
										<%= f.label(:word_description, 'Descriptive Key Words', class: 'input-label-form') %>							
									</div>
									<div class="cell-right-form">
										<%= f.text_field :word_description, :class => 'input-form', :tabindex => '5', :autofocus => false %>	
									</div>
									<div class="cell-error" id="state_word_description"><p id="error_word_description"></p></div>      					   							 								      	
								</div>
		
								<div class="input-form-spacer"></div>
								<div class="input-form-spacer"></div>
		
								<div class="row">
									<div style="width: 600px; text-align: center;">
									<%= f.submit 'Submit', class: 'form-btn', :tabindex => '6' %>
									</div>      					   							 	
								</div>      		
													
								<% end %>
								
							</div>
							
						</div>
						
					</div>
			
				</div>
				
				<div class="col-right">
					<%= render 'share/dir_publishers_right' %>
				</div>												
			</div>
		</div>
	</div>


					
	<script>


		function formValidate() {
						
			$("#form_admin_new").validate({
			
				submitHandler: function(form) {
					form.submit();
				},
			
				debug: true,
				onkeyup: false,
				focusCleanup: true,
				// invalidClass: "error",
				// validClass: "success",
				
				rules: {
					'admin_user[name_first]': {
						required: true,
						minlength: 1,						
						maxlength: 30						
					},
					'admin_user[name_first]': {
						required: true,
						minlength: 1,
						maxlength: 30												
					},
					'admin_user[email]': {
						required: true,
						maxlength: 100,
						email: true
					},															
					'admin_user[username]': {
						required: true,
						minlength: 1,
						maxlength: 30
					},
					'admin_user[password]': {
						required: true,
						minlength: 4,
						maxlength: 50
					},
					'admin_user[password_confirmation]': {
						equalTo: "#admin_user_password"
					}
				},
				invalidHandler: function(event, validator) {
					var errors = validator.numberOfInvalids();
					if (errors) {
						var message = errors == 1
						? 'You missed 1 field'
						: 'You missed ' + errors + ' fields';
						$("div.errors p").html(message);
						$("div.errors").show();
					} else {
						$("div.errors").hide();
					}
				},				
				messages: {
					'admin_user[name_first]': {
						required: "*",
						maxlength: "First name exceeds 30 characters"							
					},
					'admin_user[name_last]': {
						required: "*",
						maxlength: "Last name exceeds 30 characters"							
					},
					'admin_user[username]': {
						required: "*",
						minlength: "Username at least 2 characters",
						maxlength: "Username exceeds 15 characters"
					},
					'admin_user[password]': {
						required: "*",
						minlength: "Password at least 4 characters long",
						maxlength: "Password exceeds 20 characters"
					},
					'admin_user[password_confirmation]': {
						equalTo: "Passwords must match"
					},
					'admin_user[email]': {
						required: "*",
						maxlength: "Email address exceeds 40 characters",
						email: "Please enter a valid email address"
					}										
				},
				errorContainer: $("div .error_label"),				
				errorPlacement: function(error, element) {
					error.insertAfter('#error_' + element.attr('id'));
					$('#' + element.attr('id')).removeClass('required').removeClass('success').addClass('error');
					//$('#label_' + element.attr('id')).removeClass('required-label').addClass('error-label');
				},
				// invalid: function(element) {
					// $('#' + element.attr('id')).removeClass('required').removeClass('success').addClass('error');
					// $('#label_' + element.attr('id')).removeClass('required-label').addClass('error-label');					
				// },
				// highlight: function(element) {
					// $('#' + element.attr('id')).removeClass('required').removeClass('success').addClass('error');
					// //$('#label_' + element.attr('id')).removeClass('required-label').addClass('error-label');
				// },
				// unhighlight: function(element) {
					// //$('#' + element.attr('id')).removeClass('required').removeClass('success').addClass('error');
					// //$('#label_' + element.attr('id')).removeClass('required-label').addClass('error-label');
				// },
				error: function(label) {
					$('#' + label.attr('for')).removeClass('required').removeClass('success').addClass('error');
					$('#label_' + label.attr('for')).removeClass('required-label').addClass('error-label');
				},
				success: function(label) {
					$('#' + label.attr('for')).removeClass('required').removeClass('error').addClass('success');
					$('#label_' + label.attr('for')).removeClass('error-label').addClass('required-label');
					
					$('#state_' + label.attr('for')).css ({			
						background: 'url("/assets/submit_form_tick.png") no-repeat 0px 5px'
					});
 
					$('#error_' + label.attr('for')).html("");
				},				
				focus: function(element) {
				 	$('#' + element.attr('id')).removeClass('required').removeClass('error').removeClass('success').addClass('focus');
				}
			});
			
			$.validator.setDefaults({
				
				submitHandler: function() {
					form.submit();
				}
				//$('#user_username');
				
				// submitHandler: function() { alert("submitted!"); }
				// debug: true,
				// onkeyup: false,
				// focusCleanup: true,
				// errorClass: "invalid",
				// validClass: "success"
			});
		}

		$(window).load( function() {
		//$(document).ready(function(){

			// formValidate();

		});
	
	</script>
